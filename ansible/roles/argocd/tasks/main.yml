- name: Update DuckDNS IP
  ansible.builtin.uri:
    url: "https://www.duckdns.org/update?domains=janusc&token={{ duckdns_token }}&ip="
    method: GET
    return_content: true
  register: duckdns_response

- name: Show DuckDNS update response
  ansible.builtin.debug:
    var: duckdns_response.content

- name: Set KUBECONFIG for Ansible to use
  ansible.builtin.set_fact:
    kubeconfig: /etc/rancher/k3s/k3s.yaml

- name: Install Helm
  ansible.builtin.shell: |
    curl -fsSL https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash
  args:
    creates: /usr/local/bin/helm

- name: Add jetstack (cert-manager) Helm repo
  kubernetes.core.helm_repository:
    name: jetstack
    repo_url: https://charts.jetstack.io

- name: Add ArgoCD Helm repo
  kubernetes.core.helm_repository:
    name: argo
    repo_url: https://argoproj.github.io/argo-helm

- name: Install/Upgrade cert-manager via Helm
  kubernetes.core.helm:
    name: cert-manager
    chart_ref: jetstack/cert-manager
    release_namespace: cert-manager
    create_namespace: true
    kubeconfig: "{{ kubeconfig }}"
    values:
      installCRDs: true

- name: Create cert-manager ClusterIssuer for Let's Encrypt
  kubernetes.core.k8s:
    state: present
    namespace: cert-manager
    kubeconfig: "{{ kubeconfig }}"
    values:
      apiVersion: cert-manager.io/v1
      kind: ClusterIssuer
      metadata:
        name: letsencrypt-prod
      spec:
        acme:
          server: https://acme-v02.api.letsencrypt.org/directory
          email: "{{ acme_email }}"
          privateKeySecretRef:
            name: letsencrypt-prod
          solvers:
            - http01:
                ingress:
                  class: traefik

- name: Install/Upgrade ArgoCD via Helm
  kubernetes.core.helm:
    name: argocd
    chart_ref: argo/argo-cd
    release_namespace: argocd
    create_namespace: true
    kubeconfig: "{{ kubeconfig }}"
    values:
      server:
        ingress:
          enabled: true
          annotations:
            kubernetes.io/ingress.class: traefik
            traefik.ingress.kubernetes.io/router.entrypoints: websecure
            traefik.ingress.kubernetes.io/router.tls: "true"
          hosts:
            - argocd.janusc.duckdns.org
          paths:
            - /
          tls:
            - hosts:
                - argocd.janusc.duckdns.org
      configs:
        params:
          server.insecure: false
    wait: true
    wait_timeout: 600
    update_repo_cache: true

- name: Copy Argo CD root bootstrap manifest to remote
  copy:
    src: ../../bootstrap/root-application.yaml   # local path, from control machine
    dest: /tmp/root-application.yaml              # remote path
    mode: '0644'

- name: Apply Argo CD root bootstrap Application
  kubernetes.core.k8s:
    state: present
    namespace: argocd
    src: /tmp/root-application.yaml               # remote path
    kubeconfig: "{{ kubeconfig }}"

- name: Install Helm
  ansible.builtin.shell: |
    curl -fsSL https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash
  args:
    creates: /usr/local/bin/helm
