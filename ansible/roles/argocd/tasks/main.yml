- name: Set KUBECONFIG for Ansible to use
  ansible.builtin.set_fact:
    kubeconfig: /etc/rancher/k3s/k3s.yaml

- name: Ensure argocd namespace exists
  kubernetes.core.k8s:
    api_version: v1
    kind: Namespace
    name: argocd
    state: present
    kubeconfig: "{{ kubeconfig }}"

- name: Apply ArgoCD manifests
  shell: |
    export PATH=/usr/local/bin:$PATH
    kubectl apply -n argocd -f https://raw.githubusercontent.com/argoproj/argo-cd/stable/manifests/install.yaml
  environment:
    KUBECONFIG: "{{ kubeconfig }}"

- name: Wait for ArgoCD server deployment ready
  shell: |
    export PATH=/usr/local/bin:$PATH
    kubectl -n argocd rollout status deployment/argocd-server --timeout=120s
  environment:
    KUBECONFIG: "{{ kubeconfig }}"

- name: Get Argo CD server pod
  kubernetes.core.k8s_info:
    api_version: v1
    kind: Pod
    namespace: argocd
    label_selectors:
      - app.kubernetes.io/name=argocd-server
    kubeconfig: "{{ kubeconfig }}"
  register: argocd_pods
  

- name: Wait for argocd-server pod to be ready
  kubernetes.core.k8s_info:
    api_version: v1
    kind: Pod
    namespace: argocd
    label_selectors:
      - app.kubernetes.io/name=argocd-server
    kubeconfig: "{{ kubeconfig }}"
  register: argocd_pods
  until: >
    argocd_pods.resources is defined and
    argocd_pods.resources | length > 0 and
    argocd_pods.resources[0].status.phase == "Running"
  retries: 10
  delay: 15

- name: Apply Argo CD root bootstrap Application
  kubernetes.core.k8s:
    state: present
    namespace: argocd
    src: "./bootstrap/root-application.yaml"
    kubeconfig: "{{ kubeconfig }}"
